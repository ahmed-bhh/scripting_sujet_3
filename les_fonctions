#!/bin/bash

function show_usage() {
        echo `basename $0` ': [-h] [-m] [-t] [-c] [-g] [-d] [-m] [-v] Path :' `dirname $(realpath $0)`

}



function display_help() {
        while read p
        do echo $p
        done < help.txt
}



check_compressed_file() {
    local file_path="$1"
    
    # Vérifier si le fichier existe
    if [[ ! -e "$file_path" ]]; then
        echo "Erreur: Le fichier '$file_path' n'existe pas."
        return 2
    fi
    
    # Utiliser la commande file pour vérifier le type du fichier
    file_output=$(file "$file_path")
    
    # Afficher la sortie pour débogage
    echo "Commande file output: $file_output"
    
    # Vérifier si la sortie contient 'gzip compressed data'
    if [[ "$file_output" == *"gzip compressed data"* ]]; then
        echo "Le fichier est déjà compressé."
        return 0  # Vrai (0 en Bash signifie succès)
    else
        echo "Le fichier n'est pas compressé."
        return 1  # Faux (1 en Bash signifie échec)
    fi
}


set_compressed_file() {
    local file_path="$1"


    check_compressed_file "$file_path"
    local result=$?


    if [[ $result -eq 1 ]]; then
        gzip "$file_path"
        echo "Fichier compressé avec succès."
    else
        echo "Aucune opération n'est nécessaire."
    fi
}

move_folder_to_trash() {
    local file_path="$1"

    # Appeler la fonction check_compressed_file et capturer son code de retour
    check_compressed_file "$file_path"
    local result=$?

    # Vérifier si le fichier est compressé (code de retour 0)
    if [[ $result -eq 1 ]]; then
     set_compressed_file "$file_path"
     
     mkdir -p trash
        mv "${file_path}".gz"" trash/
        echo "Le fichier '${file_path}' a été déplacé dans la corbeille."
        
        
        else
         mkdir -p trash
        mv "${file_path}" trash/
        echo "Le fichier '${file_path}' a été déplacé dans la corbeille."
        
     
     fi

        
    

}

auteurs()
{
  echo "les auteurs sont : taher belhaj hassen  "
  echo "version du code :2.0"
}



clean_trash() {
    local trash_dir="trash"

    # Vérifier si le dossier 'trash' existe
    if [[ ! -d "$trash_dir" ]]; then
        echo "Le dossier '$trash_dir' n'existe pas."
        return 1
    fi

    # Trouver et supprimer les fichiers dans 'trash' modifiés il y a plus de 2 minutes
    find "$trash_dir" -type f -mmin +2 -exec rm -f {} \;
    #    find "$trash_dir" -type f -mtime +2 -exec rm -f {} \;


    echo "Les fichiers dans '$trash_dir' qui datent de plus de 2 minutes ont été supprimés."
}




#hedha el menu mta3 l option -m
text_menu()
{
ps3="choix :"
select item in "-show_usage-" "-help-" "-compresser-" "-move to trash" "-auteurs-" "-verifier_trash-" 
do
echo "vous avez choisis l'item $REPLY:$item"
case $REPLY in
 
1)
echo "show_usage"
show_usage
;;
2)
echo "help"
display_help
;;
3)
echo "compresser file"
echo " donner le nom du fichier a compresser"
read compresser

set_compressed_file "$compresser"

;;
4)
echo "donner le fichier a deplacer vers /trash"
read trash
move_folder_to_trash "$trash"

;;
5)
auteurs

;;
6)
echo "donnez nom du dossier"
clean_trash
;;
*)
echo "choix incorrect"
exit 0
;;
esac
done
}
